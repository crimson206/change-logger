# Changelog

{% for version, release in context.history.released.items() %}
## v{{ version }} <small>({{ release.tagged_date.strftime('%Y-%m-%d') }})</small>

{% if release.elements %}

{% for commit_type, commits in context.history.unreleased.items() if commits and commit_type != "unknown" %}
{% if commit_type == "features" %}
### 🚀 Features
{% elif commit_type == "bug fixes" %}
### 🐛 Bug Fixes
{% elif commit_type == "docs" %}
### 📚 Documentation
{% elif commit_type == "style" %}
### 🎨 Style
{% elif commit_type == "refactor" %}
### ♻️ Refactor
{% elif commit_type == "perf" %}
### ⚡ Performance
{% elif commit_type == "test" %}
### ✅ Tests
{% elif commit_type == "build" %}
### 🔨 Build
{% elif commit_type == "ci" %}
### 👷 CI/CD
{% elif commit_type == "chore" %}
### 🔧 Maintenance
{% elif commit_type == "revert" %}
### ⏪ Reverts
{% else %}
### {{ commit_type | title }}
{% endif %}

{% for commit in commits %}
- **{{ commit.descriptions[0] if commit.descriptions else 'No description' }}** ([{{ commit.commit.hexsha[:8] }}](https://github.com/{{ context.repo_owner }}/{{ context.repo_name }}/commit/{{ commit.commit.hexsha }}))
{% if commit.descriptions and commit.descriptions | length > 1 %}

  <details>
  <summary>📝 Details</summary>
  
{% for desc in commit.descriptions[1:] %}
  {% for line in desc.split('\n') %}
  {{ line }}
  {% endfor %}
{% endfor %}
  
  </details>
{% endif %}
{% endfor %}

{% endfor %}

{% else %}
*No significant changes in this release.*
{% endif %}

---

{% endfor %}