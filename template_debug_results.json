{
  "summary": {
    "total_tests": 26,
    "passed": 25,
    "failed": 1,
    "success_rate": "96.2%",
    "passed_syntaxes": [
      "{{ context.repo_name }}",
      "{{ context.repo_owner }}",
      "{{ context.hvcs_type }}",
      "{{ context.history }}",
      "{{ context.history.unreleased }}",
      "{{ context.history.released }}",
      "{% for key, value in context.history.unreleased.items() %}{{ key }}{% endfor %}",
      "{% for version, release in context.history.released.items() %}{{ version }}{% endfor %}",
      "{% if context.history.unreleased %}Has unreleased{% endif %}",
      "{% if context.history.released %}Has releases{% endif %}",
      "{{ context.repo_name | title }}",
      "{{ context.history.unreleased.keys() | list }}",
      "{% if context.history.unreleased and context.history.unreleased.values() | sum(start=[]) | length > 0 %}Unreleased changes{% endif %}",
      "{% for version, release in context.history.released.items() %}{{ release.tagged_date.strftime('%Y-%m-%d') }}{% endfor %}",
      "{{ \"https://github.com/\" + context.repo_owner + \"/\" + context.repo_name }}",
      "{% for commit_type, commits in context.history.unreleased.items() %}\n{% for commit in commits %}\n- {{ commit.description }}\n{% endfor %}\n{% endfor %}",
      "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.descriptions }}{% endfor %}{% endfor %}",
      "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.descriptions[0] if commit.descriptions else 'No description' }}{% endfor %}{% endfor %}",
      "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.descriptions | join(' ') }}{% endfor %}{% endfor %}",
      "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.body if commit.body else 'No body' }}{% endfor %}{% endfor %}",
      "{% for commit_type, commits in context.history.unreleased.items() %}\n{% for commit in commits %}\nTitle: {{ commit.descriptions[0] if commit.descriptions else 'No title' }}\n{% if commit.descriptions and commit.descriptions | length > 1 %}\nBody: {{ commit.descriptions[1:] | join('\\n') }}\n{% endif %}\n{% endfor %}\n{% endfor %}",
      "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.breaking_descriptions }}{% endfor %}{% endfor %}",
      "{% for commit_type, commits in context.history.unreleased.items() %}\n### {{ commit_type }}\n{% for commit in commits %}\n- **{{ commit.descriptions[0] if commit.descriptions else 'No title' }}**\n{% if commit.descriptions and commit.descriptions | length > 1 %}\n  {% for desc in commit.descriptions[1:] %}\n  {{ desc }}\n  {% endfor %}\n{% endif %}\n{% if commit.breaking_descriptions %}\n  **BREAKING CHANGES:**\n  {% for breaking in commit.breaking_descriptions %}\n  - {{ breaking }}\n  {% endfor %}\n{% endif %}\n{% endfor %}\n{% endfor %}",
      "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.commit.hexsha[:8] }}{% endfor %}{% endfor %}",
      "{% for commit_type, commits in context.history.unreleased.items() %}\n{% for commit in commits %}\n- {{ commit.descriptions[0] if commit.descriptions else 'No description' }} ([{{ commit.commit.hexsha[:8] }}](https://github.com/{{ context.repo_owner }}/{{ context.repo_name }}/commit/{{ commit.commit.hexsha }}))\n{% endfor %}\n{% endfor %}"
    ],
    "failed_syntaxes": [
      {
        "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.__dict__.keys() | list }}{% endfor %}{% endfor %}",
        "error": "[17:53:24] WARNING  Token value is missing!                                                                                                                 config.py:779\n::ERROR:: 'semantic_release.commit_parser.token.ParsedCommit object' has no attribute '__dict__'\nRun semantic-release in very verbose mode (-vv) to see the full traceback.\n"
      }
    ]
  },
  "detailed_results": [
    {
      "syntax": "{{ context.repo_name }}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nchange-logger\n",
      "stdout": "",
      "stderr": "[17:52:56] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{{ context.repo_owner }}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\ncrimson206\n",
      "stdout": "",
      "stderr": "[17:52:57] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{{ context.hvcs_type }}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\ngithub\n",
      "stdout": "",
      "stderr": "[17:52:58] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{{ context.history }}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n<ReleaseHistory: 14 commits unreleased, 4 versions released>\n",
      "stdout": "",
      "stderr": "[17:52:59] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{{ context.history.unreleased }}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\ndefaultdict(<class 'list'>, {'features': [ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['test commit v1.3.0'], breaking_descriptions=[], commit=<git.Commit \"e398db7a64ce505b19197c7c8bba2788cd376437\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True), ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['I am so tired2'], breaking_descriptions=[], commit=<git.Commit \"22a13ece36e6c10ee41866b523ae2dc792a2b534\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True), ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['I am so tired'], breaking_descriptions=[], commit=<git.Commit \"7873c268ac3729306d8dbd6f74bd850d0c341ee1\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True), ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['example feat message2'], breaking_descriptions=[], commit=<git.Commit \"89adf217995a4e601c3a85945997ca1ac927823e\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True), ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['example feat message'], breaking_descriptions=[], commit=<git.Commit \"ebf310417a4971535c559c8de075f123dc1637d8\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True), ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['any message with correct syntax'], breaking_descriptions=[], commit=<git.Commit \"0ba7df777e25c59a7a4774ae8660c464d9185fa4\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True), ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['add comprehensive test suite and CI/CD pipeline', 'This commit establishes a robust testing and automation foundation:', '- Add unit tests for core functionality', '- Configure GitHub Actions for automated testing', '- Set up semantic-release for automated versioning', '- Ensure code quality with linting and formatting checks', 'The CI/CD pipeline now runs tests, validates code quality,', 'and automatically generates releases with changelogs.', 'Closes #CI-001'], breaking_descriptions=[], commit=<git.Commit \"53229104cd3a6781e1cee89e6dee09f18f391b9b\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True), ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['improve error handling'], breaking_descriptions=[], commit=<git.Commit \"4ef3b8eb9a8e6cb80c22a13a82ea20aca2ef5178\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True)], 'unknown': [ParseError(commit=<git.Commit \"cbdabbf45bcfbdef19da1936aad614f3f6d22f97\">, error=\"Unable to parse commit message: 'changed changelog name'\"), ParseError(commit=<git.Commit \"b6cb35c04adca0612cf24d474b8341d38d87e095\">, error=\"Unable to parse commit message: 'added change log'\"), ParseError(commit=<git.Commit \"430b51013b66cf5653ffa0270a8071a62df67026\">, error=\"Unable to parse commit message: 'improved secret and toml syntax'\"), ParseError(commit=<git.Commit \"7267be315ab3d945152d4a5229a9a3d374e362fe\">, error=\"Unable to parse commit message: 'updated workflows'\"), ParseError(commit=<git.Commit \"f2dac4cc90d5203339eb21b72a92341ae4b63609\">, error='Unable to parse commit message: \\'git commit -m \"fix: resolve memory leak in data processing\\\\n\\\\nThe previous implementation had a memory leak when processing\\\\nlarge datasets. This fix:\\\\n- Properly closes database connections\\\\n- Implements connection pooling\\\\n- Adds memory usage monitoring\\\\n\\\\nFixes #MEM-456\"\\'')], 'bug fixes': [ParsedCommit(bump=<LevelBump.PATCH: 2>, type='bug fixes', scope='', descriptions=['resolve memory leak in data processing', 'The previous implementation had a memory leak when processing large datasets. This fix:', '- Properly closes database connections\\n- Implements connection pooling\\n- Adds memory usage monitoring\\n- Improves overall performance by 40%', 'Fixes #MEM-456'], breaking_descriptions=[], commit=<git.Commit \"a83f73cfb3c1d8b03bcfa21324a938436a3a69a7\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True)]})\n",
      "stdout": "",
      "stderr": "[17:53:00] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{{ context.history.released }}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n{Version(major=1, minor=1, patch=0, prerelease_token='rc', prerelease_revision=None, build_metadata='', tag_format='v{version}'): {'tagger': <git.Actor \"semantic-release <semantic-release>\">, 'committer': <git.Actor \"crimson <crimson@Lenovo>\">, 'tagged_date': datetime.datetime(2025, 6, 10, 15, 3, 8, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))), 'elements': defaultdict(<class 'list'>, {'features': [ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['implement user authentication system', '- Add JWT token generation and validation\\n- Implement login/logout endpoints\\n- Add password hashing with bcrypt\\n- Create user session management\\n- Add authentication middleware\\n- Include comprehensive error handling\\n- Add unit tests for auth functions', 'Closes #123, #124, #125'], breaking_descriptions=[], commit=<git.Commit \"f95830d9f6c50cbbc901b4101d19a06709ba0292\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True)]}), 'version': Version(major=1, minor=1, patch=0, prerelease_token='rc', prerelease_revision=None, build_metadata='', tag_format='v{version}')}, Version(major=1, minor=0, patch=0, prerelease_token='rc', prerelease_revision=None, build_metadata='', tag_format='v{version}'): {'tagger': <git.Actor \"semantic-release <semantic-release>\">, 'committer': <git.Actor \"crimson <crimson@Lenovo>\">, 'tagged_date': datetime.datetime(2025, 6, 10, 14, 47, 4, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))), 'elements': defaultdict(<class 'list'>, {'features': [ParsedCommit(bump=<LevelBump.MINOR: 3>, type='features', scope='', descriptions=['initial package setup', '- Add basic package structure\\n- Configure semantic release\\n- Set up testing framework'], breaking_descriptions=[], commit=<git.Commit \"81da6e4c1e27e9abe60b11d76f38b7f99a3b1bb2\">, release_notices=(), linked_issues=(), linked_merge_request='', include_in_changelog=True)]}), 'version': Version(major=1, minor=0, patch=0, prerelease_token='rc', prerelease_revision=None, build_metadata='', tag_format='v{version}')}, Version(major=0, minor=2, patch=0, prerelease_token='rc', prerelease_revision=None, build_metadata='', tag_format='v{version}'): {'tagger': <git.Actor \"Sisung Kim <sisung.kim1@gmail.com>\">, 'committer': <git.Actor \"crimson <crimson@Lenovo>\">, 'tagged_date': datetime.datetime(2025, 6, 10, 14, 5, 44, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))), 'elements': defaultdict(<class 'list'>, {'unknown': [ParseError(commit=<git.Commit \"8515c3aea21a47e64551b801b8009bc8dfd6f2d0\">, error=\"Unable to parse commit message: 'v0.2.0'\")]}), 'version': Version(major=0, minor=2, patch=0, prerelease_token='rc', prerelease_revision=None, build_metadata='', tag_format='v{version}')}, Version(major=0, minor=1, patch=0, prerelease_token='rc', prerelease_revision=None, build_metadata='', tag_format='v{version}'): {'tagger': <git.Actor \"Sisung Kim <sisung.kim1@gmail.com>\">, 'committer': <git.Actor \"Sisung Kim <sisung.kim1@gmail.com>\">, 'tagged_date': datetime.datetime(2025, 6, 10, 13, 56, 53, tzinfo=datetime.timezone(datetime.timedelta(seconds=7200))), 'elements': defaultdict(<class 'list'>, {'unknown': [ParseError(commit=<git.Commit \"f1286d57394e8f06da95ddb2862c9c4741a1aea0\">, error=\"Unable to parse commit message: 'debugged git_tag'\"), ParseError(commit=<git.Commit \"28959bb6affc2929920a43d4261edd60f2011f35\">, error=\"Unable to parse commit message: 'release v0.1.0'\"), ParseError(commit=<git.Commit \"57ddcf2781d02f0ed6c92d464c4141ed846ff436\">, error=\"Unable to parse commit message: 'Initial commit'\")]}), 'version': Version(major=0, minor=1, patch=0, prerelease_token='rc', prerelease_revision=None, build_metadata='', tag_format='v{version}')}}\n",
      "stdout": "",
      "stderr": "[17:53:02] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for key, value in context.history.unreleased.items() %}{{ key }}{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nfeaturesunknownbug fixes\n",
      "stdout": "",
      "stderr": "[17:53:04] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for version, release in context.history.released.items() %}{{ version }}{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n1.1.01.0.00.2.00.1.0\n",
      "stdout": "",
      "stderr": "[17:53:06] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% if context.history.unreleased %}Has unreleased{% endif %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nHas unreleased\n",
      "stdout": "",
      "stderr": "[17:53:07] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% if context.history.released %}Has releases{% endif %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nHas releases\n",
      "stdout": "",
      "stderr": "[17:53:09] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{{ context.repo_name | title }}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nChange-Logger\n",
      "stdout": "",
      "stderr": "[17:53:11] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{{ context.history.unreleased.keys() | list }}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n['features', 'unknown', 'bug fixes']\n",
      "stdout": "",
      "stderr": "[17:53:12] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% if context.history.unreleased and context.history.unreleased.values() | sum(start=[]) | length > 0 %}Unreleased changes{% endif %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nUnreleased changes\n",
      "stdout": "",
      "stderr": "[17:53:13] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for version, release in context.history.released.items() %}{{ release.tagged_date.strftime('%Y-%m-%d') }}{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n2025-06-102025-06-102025-06-102025-06-10\n",
      "stdout": "",
      "stderr": "[17:53:14] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{{ \"https://github.com/\" + context.repo_owner + \"/\" + context.repo_name }}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nhttps://github.com/crimson206/change-logger\n",
      "stdout": "",
      "stderr": "[17:53:16] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}\n{% for commit in commits %}\n- {{ commit.description }}\n{% endfor %}\n{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n\n\n- \n\n- \n\n- \n\n- \n\n- \n\n- \n\n- \n\n- \n\n\n\n- \n\n- \n\n- \n\n- \n\n- \n\n\n\n-\n",
      "stdout": "",
      "stderr": "[17:53:17] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.descriptions }}{% endfor %}{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n['test commit v1.3.0']['I am so tired2']['I am so tired']['example feat message2']['example feat message']['any message with correct syntax']['add comprehensive test suite and CI/CD pipeline', 'This commit establishes a robust testing and automation foundation:', '- Add unit tests for core functionality', '- Configure GitHub Actions for automated testing', '- Set up semantic-release for automated versioning', '- Ensure code quality with linting and formatting checks', 'The CI/CD pipeline now runs tests, validates code quality,', 'and automatically generates releases with changelogs.', 'Closes #CI-001']['improve error handling']['resolve memory leak in data processing', 'The previous implementation had a memory leak when processing large datasets. This fix:', '- Properly closes database connections\\n- Implements connection pooling\\n- Adds memory usage monitoring\\n- Improves overall performance by 40%', 'Fixes #MEM-456']\n",
      "stdout": "",
      "stderr": "[17:53:18] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.descriptions[0] if commit.descriptions else 'No description' }}{% endfor %}{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\ntest commit v1.3.0I am so tired2I am so tiredexample feat message2example feat messageany message with correct syntaxadd comprehensive test suite and CI/CD pipelineimprove error handlingNo descriptionNo descriptionNo descriptionNo descriptionNo descriptionresolve memory leak in data processing\n",
      "stdout": "",
      "stderr": "[17:53:20] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.descriptions | join(' ') }}{% endfor %}{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\ntest commit v1.3.0I am so tired2I am so tiredexample feat message2example feat messageany message with correct syntaxadd comprehensive test suite and CI/CD pipeline This commit establishes a robust testing and automation foundation: - Add unit tests for core functionality - Configure GitHub Actions for automated testing - Set up semantic-release for automated versioning - Ensure code quality with linting and formatting checks The CI/CD pipeline now runs tests, validates code quality, and automatically generates releases with changelogs. Closes #CI-001improve error handlingresolve memory leak in data processing The previous implementation had a memory leak when processing large datasets. This fix: - Properly closes database connections\n- Implements connection pooling\n- Adds memory usage monitoring\n- Improves overall performance by 40% Fixes #MEM-456\n",
      "stdout": "",
      "stderr": "[17:53:21] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.body if commit.body else 'No body' }}{% endfor %}{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo body\n",
      "stdout": "",
      "stderr": "[17:53:23] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.__dict__.keys() | list }}{% endfor %}{% endfor %}",
      "success": false,
      "error_message": "[17:53:24] WARNING  Token value is missing!                                                                                                                 config.py:779\n::ERROR:: 'semantic_release.commit_parser.token.ParsedCommit object' has no attribute '__dict__'\nRun semantic-release in very verbose mode (-vv) to see the full traceback.\n",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo bodyNo body\n",
      "stdout": "",
      "stderr": "[17:53:24] WARNING  Token value is missing!                                                                                                                 config.py:779\n::ERROR:: 'semantic_release.commit_parser.token.ParsedCommit object' has no attribute '__dict__'\nRun semantic-release in very verbose mode (-vv) to see the full traceback.\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}\n{% for commit in commits %}\nTitle: {{ commit.descriptions[0] if commit.descriptions else 'No title' }}\n{% if commit.descriptions and commit.descriptions | length > 1 %}\nBody: {{ commit.descriptions[1:] | join('\\n') }}\n{% endif %}\n{% endfor %}\n{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n\n\nTitle: test commit v1.3.0\n\n\nTitle: I am so tired2\n\n\nTitle: I am so tired\n\n\nTitle: example feat message2\n\n\nTitle: example feat message\n\n\nTitle: any message with correct syntax\n\n\nTitle: add comprehensive test suite and CI/CD pipeline\n\nBody: This commit establishes a robust testing and automation foundation:\n- Add unit tests for core functionality\n- Configure GitHub Actions for automated testing\n- Set up semantic-release for automated versioning\n- Ensure code quality with linting and formatting checks\nThe CI/CD pipeline now runs tests, validates code quality,\nand automatically generates releases with changelogs.\nCloses #CI-001\n\n\nTitle: improve error handling\n\n\n\n\nTitle: No title\n\n\nTitle: No title\n\n\nTitle: No title\n\n\nTitle: No title\n\n\nTitle: No title\n\n\n\n\nTitle: resolve memory leak in data processing\n\nBody: The previous implementation had a memory leak when processing large datasets. This fix:\n- Properly closes database connections\n- Implements connection pooling\n- Adds memory usage monitoring\n- Improves overall performance by 40%\nFixes #MEM-456\n",
      "stdout": "",
      "stderr": "[17:53:25] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.breaking_descriptions }}{% endfor %}{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n[][][][][][][][][]\n",
      "stdout": "",
      "stderr": "[17:53:26] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}\n### {{ commit_type }}\n{% for commit in commits %}\n- **{{ commit.descriptions[0] if commit.descriptions else 'No title' }}**\n{% if commit.descriptions and commit.descriptions | length > 1 %}\n  {% for desc in commit.descriptions[1:] %}\n  {{ desc }}\n  {% endfor %}\n{% endif %}\n{% if commit.breaking_descriptions %}\n  **BREAKING CHANGES:**\n  {% for breaking in commit.breaking_descriptions %}\n  - {{ breaking }}\n  {% endfor %}\n{% endif %}\n{% endfor %}\n{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n\n### features\n\n- **test commit v1.3.0**\n\n\n\n- **I am so tired2**\n\n\n\n- **I am so tired**\n\n\n\n- **example feat message2**\n\n\n\n- **example feat message**\n\n\n\n- **any message with correct syntax**\n\n\n\n- **add comprehensive test suite and CI/CD pipeline**\n\n  \n  This commit establishes a robust testing and automation foundation:\n  \n  - Add unit tests for core functionality\n  \n  - Configure GitHub Actions for automated testing\n  \n  - Set up semantic-release for automated versioning\n  \n  - Ensure code quality with linting and formatting checks\n  \n  The CI/CD pipeline now runs tests, validates code quality,\n  \n  and automatically generates releases with changelogs.\n  \n  Closes #CI-001\n  \n\n\n\n- **improve error handling**\n\n\n\n\n### unknown\n\n- **No title**\n\n\n\n- **No title**\n\n\n\n- **No title**\n\n\n\n- **No title**\n\n\n\n- **No title**\n\n\n\n\n### bug fixes\n\n- **resolve memory leak in data processing**\n\n  \n  The previous implementation had a memory leak when processing large datasets. This fix:\n  \n  - Properly closes database connections\n- Implements connection pooling\n- Adds memory usage monitoring\n- Improves overall performance by 40%\n  \n  Fixes #MEM-456\n",
      "stdout": "",
      "stderr": "[17:53:27] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}{% for commit in commits %}{{ commit.commit.hexsha[:8] }}{% endfor %}{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\ne398db7a22a13ece7873c26889adf217ebf310410ba7df77532291044ef3b8ebcbdabbf4b6cb35c0430b51017267be31f2dac4cca83f73cf\n",
      "stdout": "",
      "stderr": "[17:53:29] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    },
    {
      "syntax": "{% for commit_type, commits in context.history.unreleased.items() %}\n{% for commit in commits %}\n- {{ commit.descriptions[0] if commit.descriptions else 'No description' }} ([{{ commit.commit.hexsha[:8] }}](https://github.com/{{ context.repo_owner }}/{{ context.repo_name }}/commit/{{ commit.commit.hexsha }}))\n{% endfor %}\n{% endfor %}",
      "success": true,
      "error_message": "",
      "changelog_content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n\n\n- test commit v1.3.0 ([e398db7a](https://github.com/crimson206/change-logger/commit/e398db7a64ce505b19197c7c8bba2788cd376437))\n\n- I am so tired2 ([22a13ece](https://github.com/crimson206/change-logger/commit/22a13ece36e6c10ee41866b523ae2dc792a2b534))\n\n- I am so tired ([7873c268](https://github.com/crimson206/change-logger/commit/7873c268ac3729306d8dbd6f74bd850d0c341ee1))\n\n- example feat message2 ([89adf217](https://github.com/crimson206/change-logger/commit/89adf217995a4e601c3a85945997ca1ac927823e))\n\n- example feat message ([ebf31041](https://github.com/crimson206/change-logger/commit/ebf310417a4971535c559c8de075f123dc1637d8))\n\n- any message with correct syntax ([0ba7df77](https://github.com/crimson206/change-logger/commit/0ba7df777e25c59a7a4774ae8660c464d9185fa4))\n\n- add comprehensive test suite and CI/CD pipeline ([53229104](https://github.com/crimson206/change-logger/commit/53229104cd3a6781e1cee89e6dee09f18f391b9b))\n\n- improve error handling ([4ef3b8eb](https://github.com/crimson206/change-logger/commit/4ef3b8eb9a8e6cb80c22a13a82ea20aca2ef5178))\n\n\n\n- No description ([cbdabbf4](https://github.com/crimson206/change-logger/commit/cbdabbf45bcfbdef19da1936aad614f3f6d22f97))\n\n- No description ([b6cb35c0](https://github.com/crimson206/change-logger/commit/b6cb35c04adca0612cf24d474b8341d38d87e095))\n\n- No description ([430b5101](https://github.com/crimson206/change-logger/commit/430b51013b66cf5653ffa0270a8071a62df67026))\n\n- No description ([7267be31](https://github.com/crimson206/change-logger/commit/7267be315ab3d945152d4a5229a9a3d374e362fe))\n\n- No description ([f2dac4cc](https://github.com/crimson206/change-logger/commit/f2dac4cc90d5203339eb21b72a92341ae4b63609))\n\n\n\n- resolve memory leak in data processing ([a83f73cf](https://github.com/crimson206/change-logger/commit/a83f73cfb3c1d8b03bcfa21324a938436a3a69a7))\n",
      "stdout": "",
      "stderr": "[17:53:30] WARNING  Token value is missing!                                                                                                                 config.py:779\n"
    }
  ]
}